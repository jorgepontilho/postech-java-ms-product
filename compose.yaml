services:
  mysql-product:
    image: mysql:latest
    restart: always
    container_name: mysql-product
    hostname: "mysql-product"
    environment:
      MYSQL_DATABASE: 'productdb'
      MYSQL_USER: 'product_mysql'
      MYSQL_PASSWORD: 'mSq@2024*PtEc'
      MYSQL_ROOT_PASSWORD: 'mSqR@@t*2024p@s'
    ports:
      - '3307:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "mysql-product" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - my_network


  msproduct:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mysql-product:
        condition: service_healthy
    hostname: "ms-product"
    environment:
      MYSQL_HOSTNAME: mysql-product
      MYSQL_PORT: 3306
      MSUSER_HOSTNAME: ms-user
      MSUSER_PORT: 8080
    ports:
      - 8081:8081
    networks:
      - my_network


  sonarqube:
    image: sonarqube:community
    hostname: "sonarqube"
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9002:9000"

  db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
networks:
  my_network:
    driver: bridge
    external: true